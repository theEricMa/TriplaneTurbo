name: "asd_mv_nerf_long"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 10

data_type: "mvdream-random-multiview-camera-datamodule"
data:
  batch_size: [4, 4] # must be dividable by n_view
  n_view: 4
  # 0-4999: 64x64, >=5000: 256x256
  width: [64, 256]
  height: [64, 256]
  resolution_milestones: [10000]
  camera_distance_range: [0.8, 1.0] # relative
  fovy_range: [15, 60]
  elevation_range: [0, 30]
  camera_perturb: 0.
  center_perturb: 0.
  up_perturb: 0.
  eval_camera_distance: 3.0
  eval_fovy_deg: 40.
  n_val_views: 30

system_type: "scaledreamer-system"
system:
  visualize_samples: false #true
  validation_via_video: true

  geometry_type: "implicit-volume"
  geometry:
    radius: 1.0
    normal_type: "finite_difference"

    # use Magic3D density initialization instead
    density_bias: "blob_magic3d"
    density_activation: softplus
    density_blob_scale: 10.
    density_blob_std: 0.5

    pos_encoding_config:
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.447269237440378 # max resolution 4096

  material_type: no-material
  material:
    n_output_dims: 3
    color_activation: sigmoid
    requires_normal: true

  background_type: "neural-environment-map-background"
  background:
    color_activation: sigmoid
    random_aug: true
    random_aug_prob: 0.5
    dir_encoding_config:
      otype: HashGrid
      n_features_per_level: 2
      log2_hashmap_size: 19
      n_levels: 4
      base_resolution: 4
      # desired_resolution = 256
      per_level_scale: 4.0
      # per_level_scale = np.exp2(np.log2(desired_resolution / base_resolution) / (num_levels - 1))

  renderer_type: "nerf-volume-renderer"
  renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 256 # for lower vram

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "pretrained/stable-diffusion-2-1-base"
    prompt: ???
    negative_prompt: "ugly, bad anatomy, blurry, pixelated obscure, unnatural colors, poor lighting, dull, and unclear, cropped, lowres, low quality, artifacts, duplicate, morbid, mutilated, poorly drawn face, deformed, dehydrated, bad proportions"
    front_threshold: 30.
    back_threshold: 30.

  guidance_type: "mvdream-asynchronous-score-distillation-guidance"
  guidance:
    model_name: "sd-v2.1-base-4view"
    ckpt_path: "pretrained/sd-v2.1-base-4view.pt" # path to a pre-downloaded checkpoint file (null for loading from URL)
    guidance_scale: 7.5
    plus_ratio: 0.1
    plus_random: true
    min_step_percent: [0, 0.5, 0.02, 25000] # follow MVDream
    max_step_percent: [0, 0.98, 0.5, 25000] # same as vsd

  loggers:
    wandb:
      enable: false
      project: "threestudio"
      name: None

  loss:
    lambda_asd: 1.
    lambda_orient: [10000, 0., 100., 10001]
    lambda_sparsity: 20
    lambda_opaque: [10000, 0.0, 100.0, 10001]
    lambda_z_variance: 0.
  optimizer:
    name: AdamW
    args:
      betas: [0., 0.99]
      eps: 1.e-15
    params:
      geometry.encoding:
        lr: 0.003
      geometry.density_network:
        lr: 0.003
      geometry.feature_network:
        lr: 0.003
      background:
        lr: 0.003
trainer:
  max_steps: 25000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 1000
  enable_progress_bar: true
  precision: 32

checkpoint:
  save_last: true
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}